{{- if eq .Values.architecture "master-replica" }}
# Redis Master Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "redis.fullname" . }}-master
  labels:
    {{- include "redis.labels" . | nindent 4 }}
    app.kubernetes.io/component: master
spec:
  replicas: {{ .Values.master.replicaCount }}
  selector:
    matchLabels:
      {{- include "redis.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: master
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "redis.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: master
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "redis.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - redis-server
            - /etc/redis/redis.conf
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: redis
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: redis-config
              mountPath: /etc/redis
            {{- if .Values.persistence.master.enabled }}
            - name: redis-data
              mountPath: /data
            {{- end }}
          {{- if .Values.redis.auth.enabled }}
          env:
            - name: REDIS_PASSWORD
              value: {{ .Values.redis.auth.password | quote }}
          {{- end }}
      volumes:
        - name: redis-config
          configMap:
            name: {{ include "redis.fullname" . }}-master-config
        {{- if .Values.persistence.master.enabled }}
        - name: redis-data
          persistentVolumeClaim:
            claimName: {{ include "redis.fullname" . }}-master-data
        {{- else }}
        - name: redis-data
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
# Redis Replica Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "redis.fullname" . }}-replica
  labels:
    {{- include "redis.labels" . | nindent 4 }}
    app.kubernetes.io/component: replica
spec:
  replicas: {{ .Values.replica.replicaCount }}
  selector:
    matchLabels:
      {{- include "redis.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: replica
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "redis.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: replica
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "redis.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - redis-server
            - /etc/redis/redis.conf
            - --replicaof
            - {{ include "redis.fullname" . }}-master
            - "6379"
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: redis
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: redis-config
              mountPath: /etc/redis
            {{- if .Values.persistence.replica.enabled }}
            - name: redis-data
              mountPath: /data
            {{- end }}
          {{- if .Values.redis.auth.enabled }}
          env:
            - name: REDIS_PASSWORD
              value: {{ .Values.redis.auth.password | quote }}
          {{- end }}
      volumes:
        - name: redis-config
          configMap:
            name: {{ include "redis.fullname" . }}-replica-config
        {{- if .Values.persistence.replica.enabled }}
        - name: redis-data
          persistentVolumeClaim:
            claimName: {{ include "redis.fullname" . }}-replica-data
        {{- else }}
        - name: redis-data
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- else }}
# Standalone Redis Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "redis.fullname" . }}
  labels:
    {{- include "redis.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: 1
  {{- end }}
  selector:
    matchLabels:
      {{- include "redis.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "redis.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "redis.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - redis-server
            - /etc/redis/redis.conf
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: redis
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: redis-config
              mountPath: /etc/redis
            {{- if .Values.persistence.enabled }}
            - name: redis-data
              mountPath: /data
            {{- end }}
          {{- if .Values.redis.auth.enabled }}
          env:
            - name: REDIS_PASSWORD
              value: {{ .Values.redis.auth.password | quote }}
          {{- end }}
      volumes:
        - name: redis-config
          configMap:
            name: {{ include "redis.fullname" . }}-config
        {{- if .Values.persistence.enabled }}
        - name: redis-data
          persistentVolumeClaim:
            claimName: {{ include "redis.fullname" . }}-data
        {{- else }}
        - name: redis-data
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}